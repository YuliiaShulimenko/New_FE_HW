// ****üò¢üò¢üò¢*******–¢–∏–≥—Ä–∞–Ω,—è —á–µ—Å—Ç–Ω–æ 2 –Ω–µ–¥–µ–ª–∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å —Å–∏–¥–µ–ª–∞ –Ω–∞–¥ —ç—Ç–∏–º —Å–∞–π—Ç–æ–º,—É –º–µ–Ω—è —Ç–æ —Ç–∞–º,—Ç–æ —Å—è–º –≤–µ—á–Ω–æ —á—Ç–æ-—Ç–æ –ª–æ–º–∞–µ—Ç—Å—è,–≤–µ—Ä—Å—Ç–∫–∞ –∫—É–¥–∞-—Ç–æ –ø–æ–ª–∑–µ—Ç –≤–µ—á–Ω–æ,—Å–¥–µ–ª–∞—é –∫–Ω–æ–ø–∫—É,–Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ—á–∫–∞,—Å–¥–µ–ª–∞—é —Ç–æ—á–∫—É,–Ω–µ –∫—Ä—É—Ç–∏—Ç —Å–ª–∞–π–¥.–í –æ–±—â–µ–º —É –º–µ–Ω—è –ø—Ä–æ—Å—Ç–æ —É–∂–µ –Ω–µ—Ä–≤–æ–≤ –∏ —Å–∏–ª –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–æ–¥–µ–ª–∞—Ç—å –∞–¥–∞–ø—Ç–∏–≤,–≥–ª–∞–∑ –∑–∞–º—ã–ª–µ–Ω –∏ –æ—à–∏–±–æ–∫ –Ω–µ –≤–∏–∂—É
//–ü–û—ç—Ç–æ–º—É —Å–¥–µ–ª–∞–ª–∞ —Å—Ç–æ–ª—å–∫–æ,–Ω–∞ —Å–∫–æ–ª—å–∫–æ –º–æ–∏—Ö —Å–∏–ª –∏ –Ω–µ—Ä–≤–æ–≤ —Ö–≤–∞—Ç–∏–ª–∞,–Ω–µ —Å—É–¥–∏—Ç–µ —Å—Ç—Ä–æ–≥–æ

// –ù–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è:

// -–Ω–µ —Å–¥–µ–ª–∞–ª–∞ –æ—Ç–∫—Ä—ã–≤–∞—é—â–µ–µ—Å—è –æ–∫–Ω–æ –º–µ–Ω—é(–º–æ–±–∏–ª—å–Ω–æ–µ –æ–∫–Ω–æ –º–µ–Ω—é)_–¢.–ï. –°–î–ï–õ–ê–õ–ê,–ù–û –ü–†–ò–®–õ–û–°–¨ –ó–ê–ö–û–ú–ú–ï–ù–¢–ò–¢–¨,–¢–ö –û–ù–û –°–†–ê–ó–£ –í–´–õ–ê–ó–ò–¢ –ò –ß–¢–û–ë–´ –ï–ì–û –£–ë–†–ê–¢–¨,–ú–ù–ï –ù–£–ñ–ù–û –°–£–ó–ò–¢–¨ –≠–ö–†–ê–ù –î–û –ú–ï–î–ò–ê –ó–ê–ü–†–û–°–ê –° –ü–û–Ø–í–õ–ï–ï–ú –ë–£–†–ì–ï–†–ê –ò –£–ë–†–ê–¢–¨ –≠–¢–û –ú–û–î–ê–õ–¨–ù–û–ï –û–ö–ù–û,–•–û–¢–Ø –ò–ó–ù–ê–ß–ê–õ–¨–ù–û –ó–ê–î–ê–Æ –ï–ú–£ –î–ò–°–ü–õ–ï–ô –ù–ê–ù
// -–î–∏–≤ –º–∞–π–∫—Ä–∞—Å–æ—Ñ—Ç –≥–¥–µ*–∫–ª–∏–µ–Ω—Ç—ã) –ø–æ —Å—Ç—Ä–µ–ª–∫–µ –Ω–µ –ª–∏—Å—Ç–∞–µ—Ç

//-–Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–º —Å–ª–∞–π–¥–µ —Å –æ—Ç–∑—ã–≤–∞–º–∏ –≤—Ä–æ–¥–µ —Å–ª–∞–π–¥–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç,–Ω–æ –µ—Å–ª–∏ —è –≤–ª–µ–≤–æ –∂–º—É —Å—Ç—Ä–µ–ª–æ—á–∫—É –∏ –æ–Ω–æ –ø—Ä–æ–ª–∏—Å—Ç—ã–≤–∞–µ—Ç—Å—è –≤ –æ–±—Ä–∞—Ç–Ω—É—é —Å—Ç–æ—Ä–æ–Ω—É –¥–∞–ª—å—à–µ 1-–π —Ç–æ—á–∫–∏,—Ç–æ –æ–Ω–æ –∫—É–¥–∞-—Ç–æ –≤—ã–ª–∞–∑–∏—Ç –∏ —ç–∫—Ä–∞–Ω –±–µ–ª—ã–π —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è


//—è –Ω–µ –∑–Ω–∞—é –∫–∞–∫ –∏—Å–ø—Ä–∞–≤–∏—Ç—å —ç—Ç–∏ –æ—à–∏–±–∫–∏ –∏ –¥–æ–≤–µ—Å—Ç–∏ –¥–æ —É–º–∞,–ø—ã—Ç–∞–ª–∞—Å—å –Ω–∞–ø–∏—Å–∞—Ç—å –æ–¥–Ω—É —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—É—é —Ñ—É–Ω—Ü–∏—é –¥–ª—è —Ç—Ä–µ—Ö —Å–ª–∞–π–¥–æ–≤,–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —á—Ç–æ-—Ç–æ –≥–¥–µ-—Ç–æ –ª–æ–º–∞–µ—Ç—Å—è

// –ó–∞–¥–∞–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ figma-–º–∞–∫–µ—Ç:
// https://www.figma.com/file/AnxdgZrMkMxfNcDMl13Rhi/Template?node-id=0%3A1&t=zq6TBZXoeVBLObwE-0

// –ó–∞–¥–∞—á–∞: —Å–≤–µ—Ä—Å—Ç–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É, —É—á–∏—Ç—ã–≤–∞—è —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∏ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–æ–≥–ª–∞—Å–Ω–æ –º–∞–∫–µ—Ç—É.

// –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Ä–∞–±–æ—Ç–µ:
// –ù–∞–ª–∏—á–∏–µ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏—Ö —Ç–µ–≥–æ–≤
// –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ (H1) –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å –µ–¥–∏–Ω–∏—Ü—ã
// –£ –∫–∞–∂–¥–æ–π –∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–π –∫–∞—Ä—Ç–∏–Ω–∫–∏ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∑–∞–¥–∞–Ω–∞ —à–∏—Ä–∏–Ω–∞/–≤—ã—Å–æ—Ç–∞
// –í –º–∞–∫–µ—Ç–µ —É–ø–æ–º–∏–Ω–∞–µ—Ç—Å—è —Å–ª–∞–π–¥–µ—Ä. –ï–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ JS. –í –∫–∞—á–µ—Å—Ç–≤–µ 2,3,4 —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–ª–∞–π–¥–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–∑—è—Ç—å 1 –∫–∞—Ä—Ç–∏–Ω–∫—É (–†–µ—Ñ–µ—Ä–µ–Ω—Å: –º–∞–∫–µ—Ç).
// –°—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∞–¥–∞–ø—Ç–∏–≤–Ω–æ–π (–†–µ—Ñ–µ—Ä–µ–Ω—Å: –º–∞–∫–µ—Ç).
// –î–ª—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ (—à–∏—Ä–∏–Ω–∞ - 800px) –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –±—É—Ä–≥–µ—Ä –º–µ–Ω—é —Å –≤—ã–ø–∞–¥–∞—é—â–∏–º –º–æ–¥–∞–ª—å–Ω—ã–º –æ–∫–Ω–æ–º (–†–µ—Ñ–µ—Ä–µ–Ω—Å: –º–∞–∫–µ—Ç).





// 888888b.                                               
// 888  "88b                                              
// 888  .88P                                              
// 8888888K.   8888b.  88888b.  88888b.   .d88b.  888d888 
// 888  "Y88b     "88b 888 "88b 888 "88b d8P  Y8b 888P"   
// 888    888 .d888888 888  888 888  888 88888888 888     
// 888   d88P 888  888 888  888 888  888 Y8b.     888     
// 8888888P"  "Y888888 888  888 888  888  "Y8888  888     

// —Å–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –¥–ª—è –≤–µ—Ä—Ö–Ω–µ–≥–æ —Å–ª–∞–π–¥–∞,–≥–¥–µ –±—É–¥—É—Ç –º–µ–Ω—è—Ç—å—Å—è –∫–Ω–æ–ø–∫–∏ –∏ —Ç–µ–∫—Å—Ç
let slider_index = 0;

const banner = [
  {
    id: 1,
    title: "–ë—É—Ö–≥–∞–ª—Ç–µ—Ä—Å–∫–∏–µ —É—Å–ª—É–≥–∏ –≤ –≤–∞—à–µ–º –≥–æ—Ä–æ–¥–µ",
    button_text: "–ù–∞—à–∞ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è",
    slider_src: "./image/Rectangle00.png",
  },
  {
    id: 2,
    title: "–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è",
    button_text: "–ó–∞–∫–∞–∑–∞—Ç—å –∑–≤–æ–Ω–æ–∫",
    slider_src: "./image/Rectangle00.png",
  },
  {
    id: 3,
    title: "–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–º –∫–ª–∏–µ–Ω—Ç–∞–º",
    button_text: "–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É",
    slider_src: "./image/Rectangle00.png",
  },
  {
    id: 4,
    title: "–ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ",
    button_text: "–í–∞–∫–∞–Ω—Å–∏–∏",
    slider_src: "./image/Rectangle00.png",
  },
];

let currentWidth = 1920;
let bannerSlider = document.querySelector(".banner_slider");

let bannerText = document.querySelector(".bannerText");
let bannerBtn = document.querySelector(".bannerBtn");

let right_btn = document.querySelector(".banner_arrow_right");               //–ø–æ–¥–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É –≤–ø—Ä–∞–≤–æ
let left_btn = document.querySelector(".banner_arrow_left");                 //–ø–æ–¥–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É –≤–ª–µ–≤–æ
let banner_rounds = document.querySelectorAll(".banner_round");              //–ø–æ–¥–∫–ª—é—á–∞–µ–º –∫—Ä—É–∂–æ—á–∫–∏





function slideList(){ 
    right_btn.addEventListener("click", () => {
    if (slider_index < banner.length - 1) {
        slider_index++;
      bannerSlider.style.left = `${-1 * slider_index * currentWidth}px`;
      changeRounds(slider_index)
    } else {
        slider_index = 0
        bannerSlider.style.left = `${-1 * slider_index * currentWidth}px`;
    changeRounds(slider_index)
}})

left_btn.addEventListener("click", () => {
   
    if (slider_index != 0) {
        slider_index--;

      bannerSlider.style.left = `${-1 * slider_index * currentWidth}px`;
   
    } else { 
        slider_index = banner.length - 1;
      bannerSlider.style.left = `${-1 * slider_index * currentWidth}px`;
    }
    changeRounds(slider_index)
})


function changeRounds(slider_index) {
    for (let i = 0; i < banner.length; i++) {
      if (slider_index==i) {
        banner_rounds[i].classList.add("active")
        bannerText.innerHTML = banner[i].title
        bannerBtn.innerHTML = banner[i].button_text
      } else {
        banner_rounds[i].classList.remove("active")
      }
    }
  }


  function roundsActive() {
    for (let i = 0; i < banner.length; i++) {
        banner_rounds[i].onclick = () => {
            changeRounds(i);
            slider_index = i;
            bannerSlider.style.left = `${-1 * slider_index * currentWidth}px`;
      }
    }
  }
  roundsActive()
}
  slideList()







//   .d8888b.  888 d8b                   888             
//   d88P  Y88b 888 Y8P                   888             
//   888    888 888                       888             
//   888        888 888  .d88b.  88888b.  888888 .d8888b  
//   888        888 888 d8P  Y8b 888 "88b 888    88K      
//   888    888 888 888 88888888 888  888 888    "Y8888b. 
//   Y88b  d88P 888 888 Y8b.     888  888 Y88b.       X88 
//    "Y8888P"  888 888  "Y8888  888  888  "Y888  88888P' 
             




//–£ –º–µ–Ω—è —É–∂–µ –≥–ª–∞–∑–∞ –∑–∞–º—ã–ª–∏–ª–∏—Å—å...–¢—É—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫—Ä—É–∂–æ—á–∫–∏


const clients_arrow_left = document.querySelector('.clients_arrow_left');
const clients_arrow_right = document.querySelector('.clients_arrow_right');
const clients_round = document.querySelectorAll('.clients_round');
const clientsList = document.querySelector('.clientsList');
let activePos = 0;

for (let i = 0; i < clients_round.length; i++) {
  clients_round[i].addEventListener('click', function () {
    activePos = i;
    let currentMarginLeft = activePos * -1100;
    clientsList.style.marginLeft = `${currentMarginLeft}px`;
    toggleRoundClass(activePos);
  });
}
clients_arrow_left.addEventListener('click', () => {
  activePos--;
  if (activePos < 0) {
    activePos = 0;
  }
  let currentMarginLeft = activePos * -1100;
  clientsList.style.marginLeft = `${currentMarginLeft}px`;
  toggleRoundClass(activePos);
});
clients_arrow_right.addEventListener('click', () => {
  activePos++;
  if (activePos > clients_round.length - 1) {
    activePos = clients_round.length - 1;
  }
  let currentMarginLeft = activePos * -1100;
  clientsList.style.marginLeft = `${currentMarginLeft}px`;
  toggleRoundClass(activePos);
});
function toggleRoundClass(activePos) {
  clients_round.forEach(function (item, index) {
    item.classList.remove('clients_round_active');
    if (activePos === index) {
      item.classList.add('clients_round_active');
    }
  });
}




// 8888888b.                   d8b                                 
// 888   Y88b                  Y8P                                 
// 888    888                                                      
// 888   d88P .d88b.  888  888 888  .d88b.  888  888  888 .d8888b  
// 8888888P" d8P  Y8b 888  888 888 d8P  Y8b 888  888  888 88K      
// 888 T88b  88888888 Y88  88P 888 88888888 888  888  888 "Y8888b. 
// 888  T88b Y8b.      Y8bd8P  888 Y8b.     Y88b 888 d88P      X88 
// 888   T88b "Y8888    Y88P   888  "Y8888   "Y8888888P"   88888P'



const slides = document.querySelectorAll('.reviews_slide'),
      round  = document.querySelectorAll('.reviews_round'),
      prev   = document.querySelector('.reviews_arrow_left'),
      next   = document.querySelector('.reviews_arrow_right'),
      slider = document.querySelector('.reviews_frame');

let slideIndex = 1;

const activeDot = () => {
  round.forEach(item => item.classList.remove('reviews_round_active'));
  round[slideIndex - 1].classList.add('reviews_round_active');
}

const activeSlide = (n) => {
  slideIndex += n;
  if (slideIndex > slides.length) {
    slideIndex = 1;
  }
  if (slideIndex < 1) {
    slideIndex = slides.length;
  }
  slider.style.transform = `translateX(${-slideIndex * 1110}px)`;
  activeDot();
}

prev.addEventListener('click', function() {
  activeSlide(-1);
});
next.addEventListener('click', function() {
  activeSlide(1);
});

round.forEach((item, index) => {
  item.addEventListener('click', function() {
    slideIndex = index + 1;
    slider.style.transform = `translateX(${-slideIndex * 1110}px)`;
    activeDot();
  });
});



//–ú–û–î–ê–õ–¨–ù–û–ï –û–ö–ù–û –ü–†–ò–®–õ–û–°–¨ –ó–ê–ö–û–ú–ï–ù–¢–ò–†–û–í–ê–¢–¨,–¢–ö –•–û–¢–Ø –Ø –ï–ú–£ –í–´–°–¢–ê–í–ò–õ–ê –ò–ó–ù–ê–ß–ê–õ–¨–ù–û –î–ò–°–ü–õ–ï–ô –ù–ê–ù,–¢–û –û–ù–û –£ –ú–ï–ù–Ø –û–¢–û–ë–†–ê–ñ–ê–õ–û–°–¨ –°–†–ê–ó–£
//-----------------

// const burgerBtn =document.querySelector(".burger")
// const modal = document.querySelector(".modal")
// let showModal = false

// burgerBtn.onclick=()=>{
//   showModal = !showModal
//   showModal ? modal.style.display= "flex" : modal.style.display= "none"
//   console.log(showModal)
// }